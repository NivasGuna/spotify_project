// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/getartist/{artistname}": {
            "get": {
                "description": "Get tracks by the artist's name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get tracks by artist name",
                "operationId": "get-tracks-by-artist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the artist",
                        "name": "artistname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Error response",
                        "schema": {
                            "$ref": "#/definitions/service.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/getisrc/{isrc}": {
            "get": {
                "description": "Get a track by its ISRC or search and store from Spotify if not found",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get track by ISRC or search and store from Spotify",
                "operationId": "get-track-by-isrc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ISRC of the track",
                        "name": "isrc",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/models.Musictrack"
                        }
                    },
                    "404": {
                        "description": "Track not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/postisrc": {
            "post": {
                "description": "Save a track in the database by its ISRC or search and store from Spotify if not found",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Save or search track by ISRC",
                "operationId": "save-or-search-track-by-isrc",
                "parameters": [
                    {
                        "description": "ISRC of the track",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/models.Musictrack"
                        }
                    },
                    "400": {
                        "description": "Bad request or ISRC already exists",
                        "schema": {
                            "$ref": "#/definitions/service.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/updatetrack/{isrc}": {
            "put": {
                "description": "Update track information by its ISRC",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update track details by ISRC",
                "operationId": "update-track-by-isrc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ISRC of the track",
                        "name": "isrc",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Track details to update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated track details",
                        "schema": {
                            "$ref": "#/definitions/models.Musictrack"
                        }
                    },
                    "400": {
                        "description": "Invalid user data",
                        "schema": {
                            "$ref": "#/definitions/service.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/service.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Musictrack": {
            "type": "object",
            "properties": {
                "artistName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isrc": {
                    "type": "string"
                },
                "spotifyImage": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "service.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Musictrack API",
	Description:      "API for managing music tracks",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
